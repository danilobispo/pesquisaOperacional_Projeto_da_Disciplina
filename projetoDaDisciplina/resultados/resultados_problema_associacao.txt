# Primeira parte do experimento: Problema de Associação
# Primeira parte: Handshake entre as duas partes
# Problema de associação entre nós clientes e nós servidores
# Unbalanced assignment problem, já que M != N
# Parametrização
M = 5 ; N = 6
Vetor de nós clientes:  [14 10  1  7 15]
Vetor de nós servidores:  [ 1 14 17  3  3 17]
Matriz de custo entre os nós de entrada e saída cij:
 [[13  0  3 11 11  3]
 [ 9  4  7  7  7  7]
 [ 0 13 16  2  2 16]
 [ 6  7 10  4  4 10]
 [14  1  2 12 12  2]
 [ 0  0  0  0  0  0]]
# Variáveis de decisão:
# Variável com o tamanho NxN da matriz xij
# Constraints
# Cada cliente terá um servidor dentre os N.
# Cada servidor terá 0 ou 1 cliente dentre os M
# Objective function:
# É uma função de minimização, onde queremos o menor custo (menor diferença entre nós de origem e destino)
# Ou seja, minimização de xij*cij para i e j pertencentes a M e N
----------------------------------Resultado-----------------------------------------
Solucao:
Valor objetivo = 13
[ 0  1  0  0  0  0 ]
[ 0  0  1  0  0  0 ]
[ 1  0  0  0  0  0 ]
[ 0  0  0  0  1  0 ]
[ 0  0  0  0  0  1 ]
[ 0  0  0  1  0  0 ]
A matriz abaixo mostra os resultados na seguinte ordem para cada item:
 [nó_cliente, nó_destino, valor_max_de_taxa_de_transfe_do_no, solution_value]
[[ 0  1 14  1]
 [ 1  2 10  1]
 [ 2  0  1  1]
 [ 3  4  3  1]
 [ 4  5 15  1]]
